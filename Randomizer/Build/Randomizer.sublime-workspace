{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"size_",
				"SIZE_2D"
			],
			[
				"shift_dir",
				"shift_direction\tabc"
			],
			[
				"getEl",
				"getElementById"
			],
			[
				"margin",
				"margin-bottom\tabc"
			],
			[
				"anim",
				"animation-duration\tproperty"
			],
			[
				"tra",
				"transparent\t(main.js)"
			],
			[
				"getele",
				"getElementById"
			],
			[
				"innr",
				"innerHTML\t(main.js)"
			],
			[
				"inner",
				"innerHTML\t(main.js)"
			],
			[
				"flyou",
				"flyout-nav\t(index.html)"
			],
			[
				"getEle",
				"getElementsByClassName\t(main.js)"
			],
			[
				"indexOf",
				"indexOfArrayFlex\tabc"
			],
			[
				"indexofa",
				"indexOfArrayFlex\tabc"
			],
			[
				"indexof",
				"indexOfArray\tabc"
			],
			[
				"getP",
				"getPrototypeOf\tabc"
			],
			[
				"exis",
				"existingLineIndex\tabc"
			],
			[
				"pa",
				"param\t@param"
			],
			[
				"elem",
				"element\tabc"
			],
			[
				"parent",
				"parentNode\tabc"
			],
			[
				"cli",
				"clicked"
			],
			[
				"objri",
				"objRightClasses\tabc"
			],
			[
				"obj",
				"objLeft"
			],
			[
				"objleft",
				"objLeftClasses\tabc"
			],
			[
				"click",
				"clickCheckbox"
			],
			[
				"TOGG",
				"toggleCheckbox"
			],
			[
				"objal",
				"objAltClasses\tabc"
			],
			[
				"elemental",
				"elementAltClasses\tabc"
			],
			[
				"un",
				"undefined\tabc"
			],
			[
				"paren",
				"parentNode\tabc"
			],
			[
				"elementtwo",
				"elementTwoClasses\tabc"
			],
			[
				"getelem",
				"getElementById"
			],
			[
				"toggle",
				"toggleCheckbox\tabc"
			],
			[
				"fillTyp",
				"fillTypeArray\tabc"
			],
			[
				"inde",
				"indexOf"
			],
			[
				"filltyp",
				"fillTypeArray\tabc"
			],
			[
				"defa",
				"defaultToggles\tabc"
			],
			[
				"eleme",
				"elements\tabc"
			],
			[
				"widthV",
				"widthValues"
			],
			[
				"width",
				"widthValues\tabc"
			],
			[
				"getElem",
				"getElementsByClassName\tabc"
			],
			[
				"index",
				"indexOfArray"
			],
			[
				"widthVa",
				"widthValues\tabc"
			],
			[
				"patterndrop",
				"patternDropdownElements\tabc"
			],
			[
				"patt",
				"patternValue"
			],
			[
				"simil",
				"similarShape\tabc"
			],
			[
				"CONFI",
				"config"
			],
			[
				"patter",
				"patternOverlay\tabc"
			],
			[
				"toggl",
				"toggleCheckboxes\tabc"
			],
			[
				"he",
				"hexagon\tabc"
			],
			[
				"hex",
				"hexagon"
			],
			[
				"querysele",
				"querySelectorAll\tabc"
			],
			[
				"se",
				"sequenced"
			],
			[
				"pattern",
				"pattern-checkbox\t(index.html)"
			],
			[
				"sac",
				"sacredArrays\tabc"
			],
			[
				"padd",
				"padding-top\tproperty"
			],
			[
				"bac",
				"background-image\tproperty"
			],
			[
				"parse",
				"parseInt"
			],
			[
				"dom",
				"domWindow\tabc"
			],
			[
				"idS",
				"idString2\tabc"
			],
			[
				"ids",
				"idString"
			],
			[
				"che",
				"checkbox"
			],
			[
				"check",
				"checkbox\tabc"
			],
			[
				"seq",
				"sequenced-circle\tabc"
			],
			[
				"exi",
				"existingLineIndex\tabc"
			],
			[
				"high",
				"highlightLineSegment\tabc"
			],
			[
				"hig",
				"highlightLineSegment\tabc"
			],
			[
				"inexo",
				"indexOfArray\tabc"
			],
			[
				"strin",
				"stringify\tabc"
			],
			[
				"pushp",
				"pushPop\tabc"
			],
			[
				"sa",
				"sacredArrays"
			],
			[
				"trans",
				"transparent\tabc"
			],
			[
				"ci",
				"circle\tabc"
			],
			[
				"zona",
				"zonaPolusada\tabc"
			],
			[
				"zon",
				"zonaPolusada"
			],
			[
				"z",
				"zonaPolusada\tabc"
			],
			[
				"indexo",
				"indexOfArrayValues\tabc"
			],
			[
				"push",
				"pushPop\tabc"
			],
			[
				"par",
				"parseInt"
			],
			[
				"draw",
				"drawCircle\tabc"
			],
			[
				"wi",
				"width\tabc"
			],
			[
				"spiri",
				"spirit.radius\tabc"
			],
			[
				"inlin",
				"inline-block"
			],
			[
				"spir",
				"spirit.radius\tabc"
			],
			[
				"co",
				"context\tabc"
			],
			[
				"distan",
				"distanceSquared\tabc"
			],
			[
				"mouse",
				"mouseY\tabc"
			],
			[
				"clien",
				"clientY\tabc"
			],
			[
				"togg",
				"toggleCheckbox\tabc"
			],
			[
				"is",
				"isSequenceEmpty\tabc"
			],
			[
				"clcik",
				"clickCheckbox\tabc"
			],
			[
				"sequ",
				"sequenced-circle-10-checkbox\t(index.html)"
			],
			[
				"singl",
				"singleCircleAct\tabc"
			],
			[
				"id",
				"idString2\tabc"
			],
			[
				"chec",
				"checkboxes\tabc"
			],
			[
				"sacre",
				"sacredArrays.circle"
			],
			[
				"ch",
				"checkbox\t(index.html)"
			],
			[
				"inpu",
				"inputs\tabc"
			],
			[
				"sequen",
				"sequenced\tabc"
			],
			[
				"cycl",
				"cycleSacredArray\tabc"
			],
			[
				"cen",
				"centerDot\tabc"
			],
			[
				"dra",
				"drawCircle\tabc"
			],
			[
				"cyc",
				"cycleSacredArray\tabc"
			],
			[
				"single",
				"single-circle-checkbox\tabc"
			],
			[
				"cir",
				"circle\tabc"
			],
			[
				"valid",
				"validateButtonArray\tabc"
			],
			[
				"sing",
				"single-circle-checkbox\tabc"
			],
			[
				"val",
				"value\tabc"
			],
			[
				"initi",
				"initialOccurance\tabc"
			],
			[
				"circ",
				"circle\tabc"
			],
			[
				"pushpop",
				"pushPopAdv\tabc"
			],
			[
				"circl",
				"circleArray\tabc"
			],
			[
				"indexOfA",
				"indexOfArrayValues\tabc"
			],
			[
				"proto",
				"prototype\tabc"
			],
			[
				"cira",
				"circleArray\tabc"
			],
			[
				"fullCirc",
				"fullCircleCycle\tabc"
			],
			[
				"ind",
				"indexOf"
			],
			[
				"singleCircl",
				"singleCircleValueCompare\tabc"
			],
			[
				"singleCirc",
				"singleCircleArray\tabc"
			],
			[
				"colo",
				"colorArray\tabc"
			],
			[
				"const",
				"constraints\tabc"
			],
			[
				"clear",
				"clearCanvas\tabc"
			],
			[
				"sacr",
				"sacredSketch\tabc"
			],
			[
				"cons",
				"constants\tabc"
			],
			[
				"dr",
				"drawLine\tabc"
			],
			[
				"fun",
				"function\tabc"
			],
			[
				"styl",
				"style\t(index.html)"
			],
			[
				"inc",
				"INC"
			],
			[
				"incl",
				"include/"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/Users/justinbyrne/Programs/Xcode/Nature-of-Code/.gitignore",
			"settings":
			{
				"buffer_size": 163,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Randomizer.sublime-project",
			"settings":
			{
				"buffer_size": 657,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "// JAVA REFERENCE IMPLEMENTATION OF IMPROVED NOISE - COPYRIGHT 2002 KEN PERLIN.\n\npublic final class ImprovedNoise \n{\n    static public double noise(double x, double y, double z) \n    {\n        int X = (int)Math.floor(x) & 255,                  // FIND UNIT CUBE THAT\n            Y = (int)Math.floor(y) & 255,                  // CONTAINS POINT.\n            Z = (int)Math.floor(z) & 255;\n\n        x -= Math.floor(x);                                // FIND RELATIVE X,Y,Z\n        y -= Math.floor(y);                                // OF POINT IN CUBE.\n        z -= Math.floor(z);\n        \n        double u = fade(x),                                // COMPUTE FADE CURVES\n               v = fade(y),                                // FOR EACH OF X,Y,Z.\n               w = fade(z);\n\n        int A = p[X  ]+Y, AA = p[A]+Z, AB = p[A+1]+Z,      // HASH COORDINATES OF\n            B = p[X+1]+Y, BA = p[B]+Z, BB = p[B+1]+Z;      // THE 8 CUBE CORNERS,\n\n        return lerp(w, lerp(v, lerp(u, grad(p[AA  ], x  , y  , z   ),  // AND ADD\n                                       grad(p[BA  ], x-1, y  , z   )), // BLENDED\n                               lerp(u, grad(p[AB  ], x  , y-1, z   ),  // RESULTS\n                                       grad(p[BB  ], x-1, y-1, z   ))),// FROM  8\n                       lerp(v, lerp(u, grad(p[AA+1], x  , y  , z-1 ),  // CORNERS\n                                       grad(p[BA+1], x-1, y  , z-1 )), // OF CUBE\n                               lerp(u, grad(p[AB+1], x  , y-1, z-1 ),\n                                       grad(p[BB+1], x-1, y-1, z-1 ))));\n    }\n\n    static double fade(double t) \n    { \n        return t * t * t * (t * (t * 6 - 15) + 10); \n    }\n   \n    static double lerp(double t, double a, double b) \n    { \n        return a + t * (b - a); \n    }\n   \n    static double grad(int hash, double x, double y, double z) \n    {\n        int h = hash & 15;                      // CONVERT LO 4 BITS OF HASH CODE\n        \n        double u = h<8 ? x : y,                 // INTO 12 GRADIENT DIRECTIONS.\n               v = h<4 ? y : h==12||h==14 ? x : z;\n      \n        return ((h&1) == 0 ? u : -u) + ((h&2) == 0 ? v : -v);\n    }\n   \n    static final int p[] = new int[512], permutation[] = \n    { \n        151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,\n        10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,\n        56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,\n        122,60,211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,\n        76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,\n        226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,\n        223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,\n        98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,\n        179,162,241, 81,51,145,235,249,14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,\n        121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180\n    };\n\n    static { for (int i=0; i < 256 ; i++) p[256+i] = p[i] = permutation[i]; }\n}",
			"settings":
			{
				"buffer_size": 3321,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "int dist = ( point_x - circle_x ) * ( point_x - circle_x) + ( point_y - circle_y ) * ( point_y - circle_y );\n\nwalker[1] <> walker[0] \t\t\t\t> 1\n|||||||||||||||||||||||||||||||||||||||||\nwalker[0] <> walker[1] \t\t\t\t< 9\nwalker[0] <> walker[2]\nwalker[0] <> walker[3]\nwalker[0] <> walker[4]\nwalker[0] <> walker[5]\nwalker[0] <> walker[6]\nwalker[0] <> walker[7]\nwalker[0] <> walker[8]\nwalker[0] <> walker[9]\n\nwalker[1] <> walker[0]\nwalker[2] <> walker[1]\t\t\t\t> 2\n|||||||||||||||||||||||||||||||||||||||||\nwalker[1] <> walker[2] \t\t\t\t< 8\nwalker[1] <> walker[3]\nwalker[1] <> walker[4]\nwalker[1] <> walker[5]\nwalker[1] <> walker[6]\nwalker[1] <> walker[7]\nwalker[1] <> walker[8]\nwalker[1] <> walker[9]\n\nwalker[1] <> walker[0] \nwalker[2] <> walker[1]\nwalker[3] <> walker[2]\t\t\t\t> 3\n|||||||||||||||||||||||||||||||||||||||||\nwalker[2] <> walker[3] \t\t\t\t< 7\nwalker[2] <> walker[4]\nwalker[2] <> walker[5]\nwalker[2] <> walker[6]\nwalker[2] <> walker[7]\nwalker[2] <> walker[8]\nwalker[2] <> walker[9]\n\nwalker[1] <> walker[0]\nwalker[2] <> walker[1]\nwalker[3] <> walker[2]\nwalker[4] <> walker[3]\t\t\t\t> 4\n|||||||||||||||||||||||||||||||||||||||||\nwalker[3] <> walker[4] \t\t\t\t< 6\nwalker[3] <> walker[5]\nwalker[3] <> walker[6]\nwalker[3] <> walker[7]\nwalker[3] <> walker[8]\nwalker[3] <> walker[9]\n\nwalker[1] <> walker[0] \nwalker[2] <> walker[1]\nwalker[3] <> walker[2]\nwalker[4] <> walker[3]\nwalker[5] <> walker[4]\t\t\t\t> 5\n|||||||||||||||||||||||||||||||||||||||||\nwalker[4] <> walker[5] \t\t\t\t< 5\nwalker[4] <> walker[6]\nwalker[4] <> walker[7]\nwalker[4] <> walker[8]\nwalker[4] <> walker[9]\n\nwalker[1] <> walker[0] \nwalker[2] <> walker[1]\nwalker[3] <> walker[2]\nwalker[4] <> walker[3]\nwalker[5] <> walker[4]\nwalker[6] <> walker[5]\t\t\t\t> 6\n|||||||||||||||||||||||||||||||||||||||||\nwalker[5] <> walker[6] \t\t\t\t< 4\nwalker[5] <> walker[7]\nwalker[5] <> walker[8]\nwalker[5] <> walker[9]\n\nwalker[1] <> walker[0]\nwalker[2] <> walker[1]\nwalker[3] <> walker[2]\nwalker[4] <> walker[3]\nwalker[5] <> walker[4]\nwalker[6] <> walker[5]\nwalker[7] <> walker[6] \t\t\t\t> 7\n|||||||||||||||||||||||||||||||||||||||||\nwalker[6] <> walker[7] \t\t\t\t< 3\nwalker[6] <> walker[8]\nwalker[6] <> walker[9]\n\nwalker[1] <> walker[0] \nwalker[2] <> walker[1]\nwalker[3] <> walker[2]\nwalker[4] <> walker[3]\nwalker[5] <> walker[4]\nwalker[6] <> walker[5]\nwalker[7] <> walker[6] \nwalker[8] <> walker[7] \t\t\t\t> 8\n|||||||||||||||||||||||||||||||||||||||||\nwalker[7] <> walker[8] \t\t\t\t< 2\nwalker[7] <> walker[9]\n\nwalker[1] <> walker[0] \nwalker[2] <> walker[1]\nwalker[3] <> walker[2]\nwalker[4] <> walker[3]\nwalker[5] <> walker[4]\nwalker[6] <> walker[5]\nwalker[7] <> walker[6] \nwalker[8] <> walker[7] \nwalker[9] <> walker[8] \t\t\t\t> 9\n|||||||||||||||||||||||||||||||||||||||||\nwalker[8] <> walker[9] \t\t\t\t< 1\n\n\n",
			"settings":
			{
				"buffer_size": 2715,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/Users/justinbyrne/Programs/Xcode/Nature-of-Code/Walker 2.0/Walker 2.0/source/helpers.cpp",
			"settings":
			{
				"buffer_size": 7448,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/justinbyrne/Library/Application Support/Sublime Text 3/Packages/SublimeAStyleFormatter/SublimeAStyleFormatter.sublime-settings",
			"settings":
			{
				"buffer_size": 19610,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "while ( position_to_shift )\n{  \n\n    if ( shift_direction )  \n    {  \n        temp = array[0];\n\n        for(i = 0; i < ELEMENTS - 1; i++) \n        {\n            array[i] = array[i + 1];  \n        } \n\n        array[ELEMENTS - 1] = temp;  \n    }  \n    else  \n    {  \n        temp = array[ELEMENTS - 1];  \n\n        for (i = ELEMENTS - 1; i > 0; i--)  \n        {\n            array[i] = array[i - 1];  \n        }\n\n        array[0] = temp;  \n    }  \n\n    position_to_shift--;  \n}  ",
			"settings":
			{
				"buffer_size": 475,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"color",
				"UI: Select Color Scheme"
			],
			[
				"m",
				"Markdown Preview: Preview in Browser"
			],
			[
				"mark",
				"Markdown Preview: Preview in Browser"
			],
			[
				"compa",
				"Compare with..."
			],
			[
				"REMOVE",
				"Package Control: Remove Package"
			],
			[
				"insta",
				"Colorsublime: Install Theme"
			],
			[
				"INSTALL",
				"Colorsublime: Install Theme"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 137.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/justinbyrne/Programs/Xcode/Nature-of-Code"
	],
	"file_history":
	[
		"/Users/justinbyrne/Programs/Xcode/Nature-of-Code/Walker 2.0/Walker 2.0/main.cpp",
		"/Users/justinbyrne/Programs/Xcode/Nature-of-Code/Random Walker/Random Walker/main.cpp",
		"/Users/justinbyrne/Programs/Xcode/Nature-of-Code/Randomizer/Randomizer/source/helpers.cpp",
		"/Users/justinbyrne/Programs/Xcode/Nature-of-Code/Random Walker/Random Walker/include/colors.hpp",
		"/Users/justinbyrne/Programs/Xcode/Nature-of-Code/Random Walker/Random Walker/source/helpers.cpp",
		"/Users/justinbyrne/Programs/Xcode/Nature-of-Code/Random Walker/Random Walker/source/colors.cpp",
		"/Users/justinbyrne/Programs/Xcode/Nature-of-Code/Random Walker/Random Walker/source/colors_sproc.cpp",
		"/Users/justinbyrne/Programs/Xcode/Nature-of-Code/.gitignore",
		"/Users/justinbyrne/Programs/Xcode/Nature-of-Code/Random Walker/Random Walker/include/color_generator.h",
		"/Users/justinbyrne/Programs/SacredGeometry/.gitignore",
		"/Users/justinbyrne/Documents/bloodpressure",
		"/Users/justinbyrne/Programs/SacredGeometry/script/dropDown.js",
		"/Users/justinbyrne/Programs/SacredGeometry/script/main.js",
		"/Users/justinbyrne/Public/Dump/web.config",
		"/Users/justinbyrne/Programs/SacredGeometry/LICENSE",
		"/Users/justinbyrne/Documents/Blood Pressure",
		"/Users/justinbyrne/Programs/SacredGeometry/README.md",
		"/Users/justinbyrne/Programs/SacredGeometry/docs/callGraph.json",
		"/opt/local/var/macports/logs/_opt_local_var_macports_sources_rsync.macports.org_macports_release_tarballs_ports_graphics_graphviz/graphviz/main.log",
		"/Users/justinbyrne/Programs/SacredGeometry/style/main.scss",
		"/Users/justinbyrne/Programs/SacredGeometry 9272021 - 1229PM/script/main.js",
		"/Users/justinbyrne/Programs/SacredGeometry 10022021 - 500PM/script/main.js",
		"/Users/justinbyrne/Programs/SacredGeometry/script/main.min.js",
		"/Users/justinbyrne/Programs/SacredGeometry/script/callGraph.json",
		"/Users/justinbyrne/.zshrc",
		"/Users/justinbyrne/Programs/SacredGeometry 10022021 - 500PM/index.html",
		"/Users/justinbyrne/Programs/Sacred Geometry/LICENSE",
		"/Users/justinbyrne/Programs/Sacred Geometry/script/main.js",
		"/Users/justinbyrne/Programs/Sacred Geometry/index.html",
		"/Users/justinbyrne/Programs/Sacred Geometry/script/main - v0.1.js",
		"/Users/justinbyrne/Programs/Canvas/script/main - 0.4.js",
		"/Users/justinbyrne/Programs/Canvas/canvasLab/js/canvasLab.js",
		"/Users/justinbyrne/Programs/Canvas/script/matrix - patterning.txt",
		"/Users/justinbyrne/Programs/Canvas/script/main - 0.1.js",
		"/Users/justinbyrne/Programs/Canvas/script/main - 0.2.js",
		"/Users/justinbyrne/Programs/Canvas/script/Array.txt",
		"/Users/justinbyrne/Programs/Canvas/script/matrix.js",
		"/Users/justinbyrne/Programs/Canvas/canvasLab/canvasLab.html",
		"/Users/justinbyrne/Programs/Canvas/canvasLab/js/canvasLab_functions.js",
		"/Users/justinbyrne/Programs/portfolio/Portfolio/bin/Release/netcoreapp2.1/publish/wwwroot/lib/Trumbowyg/docs/js/vendor/modernizr-2.6.2-respond-1.1.0.min.js",
		"/Users/justinbyrne/Documents/Wireshark Dumps/Godot Tests/Godot Local Port 6007 Test 2.json",
		"/Users/justinbyrne/Programs/Godot/Games/project.godot",
		"/Users/justinbyrne/Programs/BatchOrderProccesor/bin/release/podump/BT_26185_102720_47755635.txt",
		"/Users/justinbyrne/Programs/BatchOrderProccesor/include/dirent.h",
		"/Users/justinbyrne/Downloads/dirent-master/include/dirent.h",
		"/Users/justinbyrne/Programs/BatchOrderProccesor/Make.make",
		"/Users/justinbyrne/Programs/Godot/Games/icon.png.import",
		"/Users/justinbyrne/Library/Application Support/Übersicht/widgets/getting-started.coffee",
		"/Users/justinbyrne/Downloads/foundation-sites-6.6.3/scss/components/_accordion-menu.scss"
	],
	"find":
	{
		"height": 24.0
	},
	"find_in_files":
	{
		"height": 102.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"this->",
			"\t\t\t\t> <",
			"><",
			"k",
			"MAX_DEPTH",
			"x",
			"5",
			"3",
			"2",
			"0",
			"param",
			"Window",
			"param",
			"window_height",
			"window_width",
			" ",
			",",
			"    ",
			"448",
			"28",
			"iter",
			"colors",
			"SIZE_2D",
			"2] = { ",
			"SIZE_2D",
			"SIZE_1D",
			"WALKER_DEPTH",
			"200",
			"100",
			"50",
			"40",
			"30",
			"20",
			"10",
			"175",
			"150",
			"125",
			"100",
			"75",
			"50",
			"25",
			"i * 20",
			"colors",
			"[9][1]",
			"back",
			"walker_steps",
			"array_length",
			"a[",
			"dir",
			"N",
			"pos",
			"\\w\\(",
			"(",
			"[1]:",
			"walker_steps[0][1]:",
			"BLUE",
			"wait",
			"valueue",
			"val",
			"calculateVal",
			"crossFade",
			"stepB",
			"stepG",
			"stepR",
			"endValue",
			"prevValue",
			"calculateStep",
			"prevB",
			"prevG",
			"prevR",
			"bluVal",
			"grnVal",
			"redVal",
			"= {"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/Users/justinbyrne/Programs/Xcode/Nature-of-Code/.gitignore",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 163,
						"regions":
						{
						},
						"selection":
						[
							[
								63,
								63
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Git Formats/Git Ignore.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Randomizer.sublime-project",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 657,
						"regions":
						{
						},
						"selection":
						[
							[
								627,
								627
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										640,
										641
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										493,
										494
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/zzz A File Icon zzz/aliases/JSON (Sublime).sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3321,
						"regions":
						{
						},
						"selection":
						[
							[
								2182,
								3240
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										3320,
										3321
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										115,
										116
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"default_dir": "/Users/justinbyrne/Programs/Xcode/Nature-of-Code/Randomizer/Randomizer/source",
							"git_gutter_is_enabled": false,
							"incomplete_sync": null,
							"syntax": "Packages/Java/Java.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2715,
						"regions":
						{
						},
						"selection":
						[
							[
								213,
								213
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"default_dir": "/Users/justinbyrne/Programs/Xcode/Nature-of-Code/Random Walker/Random Walker",
							"git_gutter_is_enabled": false,
							"incomplete_sync": null,
							"syntax": "Packages/Batch File/Batch File.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/Users/justinbyrne/Programs/Xcode/Nature-of-Code/Walker 2.0/Walker 2.0/source/helpers.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7448,
						"regions":
						{
						},
						"selection":
						[
							[
								6251,
								6251
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 5,
					"file": "/Users/justinbyrne/Library/Application Support/Sublime Text 3/Packages/SublimeAStyleFormatter/SublimeAStyleFormatter.sublime-settings",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19610,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										0,
										1
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"git_gutter_is_enabled": false,
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/zzz A File Icon zzz/aliases/JSON (Sublime).sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 67.0,
						"translation.y": 2778.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 6,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 475,
						"regions":
						{
						},
						"selection":
						[
							[
								26,
								26
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										26,
										27
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										6,
										7
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"default_dir": "/Users/justinbyrne/Programs/Xcode/Nature-of-Code/Random Walker/Random Walker",
							"git_gutter_is_enabled": false,
							"incomplete_sync": null,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 41.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.710562066067,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SFTP":
	{
		"height": 0.0
	},
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.sftp":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "Randomizer.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 251.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
